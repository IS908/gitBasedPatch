<?xml version='1.0' encoding='UTF-8'?>
<maven2-moduleset plugin="maven-plugin@2.17">
    <actions/>
    <description>增量版本部署发布流程测试</description>
    <keepDependencies>false</keepDependencies>
    <properties>
        <jenkins.model.BuildDiscarderProperty>
            <strategy class="hudson.tasks.LogRotator">
                <daysToKeep>1</daysToKeep>
                <numToKeep>1</numToKeep>
                <artifactDaysToKeep>-1</artifactDaysToKeep>
                <artifactNumToKeep>-1</artifactNumToKeep>
            </strategy>
        </jenkins.model.BuildDiscarderProperty>
        <hudson.model.ParametersDefinitionProperty>
            <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                    <name>TAG_NO</name>
                    <description>基线号，如20170808_01,默认会在TAG_NO前拼ModelBank_Ins_</description>
                    <defaultValue></defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                    <name>sourceDir</name>
                    <description>待抽取项目的根目录</description>
                    <defaultValue>SmartEnsemble</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                    <name>targetDir</name>
                    <description>Ant或Maven打包后的目标目录</description>
                    <defaultValue>modules/modelBank-all-integration/target/modelBank-integration-assembly</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                    <name>resultDir</name>
                    <description>增量描述文件、中间结果以及增量包存放位置</description>
                    <defaultValue>modules/modelBank-all-integration/target</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                    <name>gitDir</name>
                    <description>Git日志管理目录</description>
                    <defaultValue>.git/modules/SmartEnsemble</defaultValue>
                </hudson.model.StringParameterDefinition>
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
    </properties>
    <scm class="hudson.plugins.git.GitSCM" plugin="git@3.5.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
            <hudson.plugins.git.UserRemoteConfig>
                <url>http://57.25.2.187:8082/dcits/ModelBank.git</url>
                <credentialsId>gitlabTeller</credentialsId>
            </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
            <hudson.plugins.git.BranchSpec>
                <name>*/develop</name>
            </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <browser class="hudson.plugins.git.browser.GitLab">
            <url>http://57.25.2.187:8082</url>
            <version>9.5</version>
        </browser>
        <submoduleCfg class="list"/>
        <extensions>
            <hudson.plugins.git.extensions.impl.SubmoduleOption>
                <disableSubmodules>false</disableSubmodules>
                <recursiveSubmodules>true</recursiveSubmodules>
                <trackingSubmodules>false</trackingSubmodules>
                <reference></reference>
                <parentCredentials>true</parentCredentials>
            </hudson.plugins.git.extensions.impl.SubmoduleOption>
        </extensions>
    </scm>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers/>
    <concurrentBuild>false</concurrentBuild>
    <rootModule>
        <groupId>com.dcits.modelBank</groupId>
        <artifactId>modelBank</artifactId>
    </rootModule>
    <goals>clean package -Pfat -Dmaven.test.skip=true -U</goals>
    <aggregatorStyleBuild>true</aggregatorStyleBuild>
    <incrementalBuild>false</incrementalBuild>
    <ignoreUpstremChanges>false</ignoreUpstremChanges>
    <ignoreUnsuccessfulUpstreams>true</ignoreUnsuccessfulUpstreams>
    <archivingDisabled>false</archivingDisabled>
    <siteArchivingDisabled>false</siteArchivingDisabled>
    <fingerprintingDisabled>false</fingerprintingDisabled>
    <resolveDependencies>false</resolveDependencies>
    <processPlugins>false</processPlugins>
    <mavenValidationLevel>-1</mavenValidationLevel>
    <runHeadless>false</runHeadless>
    <disableTriggerDownstreamProjects>false</disableTriggerDownstreamProjects>
    <blockTriggerWhenBuilding>true</blockTriggerWhenBuilding>
    <settings class="jenkins.mvn.DefaultSettingsProvider"/>
    <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
    <reporters/>
    <publishers>
        <hudson.plugins.git.GitPublisher plugin="git@3.5.1">
            <configVersion>2</configVersion>
            <pushMerge>false</pushMerge>
            <pushOnlyIfSuccess>true</pushOnlyIfSuccess>
            <forcePush>false</forcePush>
            <tagsToPush>
                <hudson.plugins.git.GitPublisher_-TagToPush>
                    <targetRepoName>origin</targetRepoName>
                    <tagName>ModelBank_Ins_${TAG_NO}</tagName>
                    <tagMessage></tagMessage>
                    <createTag>true</createTag>
                    <updateTag>false</updateTag>
                </hudson.plugins.git.GitPublisher_-TagToPush>
            </tagsToPush>
        </hudson.plugins.git.GitPublisher>
    </publishers>
    <buildWrappers>
        <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    </buildWrappers>
    <prebuilders/>
    <postbuilders>
        <hudson.tasks.Shell>
            <command>#!/bin/bash
                source .bashrc PATCH_TOOL=${JENKINS_HOME}/../tools/patchTool

                java -jar ${PATCH_TOOL}/dcits-ci.jar xml ${WORKSPACE} ${gitDir} ${sourceDir} ${targetDir} ${resultDir}
                java -jar ${PATCH_TOOL}/dcits-ci.jar zip ${WORKSPACE} ${gitDir} ${sourceDir} ${targetDir} ${resultDir}
            </command>
        </hudson.tasks.Shell>
        <jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin plugin="publish-over-ssh@1.17">
            <delegate>
                <consolePrefix>SSH:</consolePrefix>
                <delegate>
                    <publishers>
                        <jenkins.plugins.publish__over__ssh.BapSshPublisher>
                            <configName>57.25.2.111</configName>
                            <verbose>false</verbose>
                            <transfers>
                                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                                    <remoteDirectory>backup/ModelBank/ModelBank_Ins_${TAG_NO}</remoteDirectory>
                                    <sourceFiles>**/app_modelbank_ins.zip</sourceFiles>
                                    <excludes></excludes>
                                    <removePrefix></removePrefix>
                                    <remoteDirectorySDF>false</remoteDirectorySDF>
                                    <flatten>false</flatten>
                                    <cleanRemote>false</cleanRemote>
                                    <noDefaultExcludes>false</noDefaultExcludes>
                                    <makeEmptyDirs>false</makeEmptyDirs>
                                    <patternSeparator>[, ]+</patternSeparator>
                                    <execCommand>#!/bin/bash
                                        source ~/.bashrc

                                        echo **********************************************************
                                        echo ** **
                                        echo ** ModelBank Deploy Shell **
                                        echo ** http://www.dcits.com **
                                        echo ** author:chenkunh@dcits.com **
                                        echo ** **
                                        echo **********************************************************

                                        ######## Var Setting START ######## #run_status=`netstat
                                        -anp|grep 9001|awk &apos;{printf $7}&apos;|cut -d/ -f1`
                                        # 应用端口号，注意需加单引号 PORT_APP=&apos;9001&apos;
                                        # 启动应用检查时间间隔设定(单位：秒) CHECK_TIME=8

                                        # 应用状态 APP_RUN_STATUS - 0：停止状态；1：启动状态 APP_RUN_STATUS=-10 MSG_START_SUCCESS=&apos;APP应用启动状态&apos;
                                        MSG_STOP_SUCCESS=&apos;APP应用停止状态&apos; MSG_STOP_FAILD=&apos;APP应用停止失败，请人工停止原应用并部署&apos;
                                        MSG_STATUS_ERROR=&apos;APP应用状态未知,请人工确认当前状态&apos;
                                        ENSEMBLE_HOME=/app/dcits/ensemble
                                        BACKUP_HOME=/app/dcits/backup/ModelBank/ModelBank_Ins_${TAG_NO}
                                        ZIP_HOME=${BACKUP_HOME}/modules/modelBank-all-integration/target
                                        ######## Var Setting END ########

                                        ######## Function START ########
                                        # 检查应用是否停止 并返回状态码：停止成功:1；停止失败:0
                                        CheckStopState(){ OLD_PID_APP=`/usr/sbin/lsof -n -P -t -i :${PORT_APP}` echo
                                        &apos;OLD_PID_APP:&apos; $OLD_PID_APP APP_RUN_STATUS=`ps -ef | grep $OLD_PID_APP
                                        | grep -v &apos;grep&apos; | wc -l` echo &apos;APP_RUN_STATUS:&apos;
                                        $APP_RUN_STATUS
                                        if [ $APP_RUN_STATUS -eq 0 ];then # 成功停止 echo $MSG_STOP_SUCCESS fi
                                        }

                                        # 检查应用是否启动 并返回状态码：启动成功:1；启动失败:0
                                        CheckStartState() { PID_APP=`/usr/sbin/lsof -n -P -t -i :${PORT_APP}` echo
                                        &apos;PID_APP: &apos; $PID_APP APP_RUN_STATUS=`ps -ef | grep ${PID_APP} | grep
                                        -v &apos;grep&apos; | wc -l` echo &apos;APP_RUN_STATUS: &apos; $APP_RUN_STATUS
                                        if [ $APP_RUN_STATUS -eq 1 ] then echo $MSG_START_SUCCESS else APP_RUN_STATUS=-1
                                        echo $MSG_STATUS_ERROR fi
                                        }

                                        CHECK_INTERVAL() { for i in `seq $1` do sleep 10s echo &apos;check&apos; $i done
                                        }
                                        ######## Function END ########


                                        # 移动增量包到相应备份目录下，并解压
                                        cd ${BACKUP_HOME}
                                        mv ${ZIP_HOME}/app_modelbank_ins.zip ${BACKUP_HOME}
                                        rm -rf modules
                                        unzip app_modelbank_ins.zip

                                        # 检查并停止应用，以备部署新应用
                                        CheckStopState
                                        if [ $APP_RUN_STATUS -ne 0 ];then echo &apos;App stopping ...&apos; sh
                                        ${ENSEMBLE_HOME}/modelBank-integration/bin/stop.sh CHECK_INTERVAL 1 for i in
                                        `seq 3` do CheckStopState if [ $APP_RUN_STATUS -eq 0 ];then break fi
                                        CHECK_INTERVAL 3 done if [ $APP_RUN_STATUS -ne 0 ];then # 停止失败 echo
                                        $MSG_STOP_FAILD exit fi
                                        fi

                                        # 备份原应用包
                                        cd ${ENSEMBLE_HOME}
                                        if [[ -d ${ENSEMBLE_HOME}/modelBank-integration-old/ ]];then rm -rf
                                        ${ENSEMBLE_HOME}/modelBank-integration-old
                                        fi

                                        if [[ -d ${ENSEMBLE_HOME}/modelBank-integration/ ]];then cp -r
                                        ${ENSEMBLE_HOME}/modelBank-integration
                                        ${ENSEMBLE_HOME}/modelBank-integration-old
                                        fi

                                        # 部署增量应用包，并启动应用
                                        mv -f ${BACKUP_HOME}/modelBank-integration/lib/*
                                        ${ENSEMBLE_HOME}/modelBank-integration/lib/
                                        rm -rf ${BACKUP_HOME}/modelBank-integration
                                        echo &apos;App starting ...&apos;
                                        sh ${ENSEMBLE_HOME}/modelBank-integration/bin/start.sh
                                        CHECK_INTERVAL $CHECK_TIME

                                        # 检查新部署应用是否启动成功
                                        CheckStartState
                                        if [ $APP_RUN_STATUS -eq 1 ];then # 新应用启动，删除旧应用 rm -rf
                                        ${ENSEMBLE_HOME}/modelBank-integration-old echo $MSG_START_SUCCESS
                                        else for i in `seq 5` do CheckStartState if [ $APP_RUN_STATUS -eq 1 ];then #
                                        新应用启动，删除旧应用 rm -rf ${ENSEMBLE_HOME}/modelBank-integration-old echo
                                        $MSG_START_SUCCESS break fi echo &apos;Retry App starting ...&apos; sh
                                        ${ENSEMBLE_HOME}/modelBank-integration/bin/start.sh CHECK_INTERVAL $CHECK_TIME
                                        done if [ $APP_RUN_STATUS -eq 0 ];then # 新部署应用多次尝试启动失败，未知异常待人工检查状态 echo
                                        $MSG_STATUS_ERROR fi
                                        fi
                                    </execCommand>
                                    <execTimeout>120000</execTimeout>
                                    <usePty>false</usePty>
                                    <useAgentForwarding>false</useAgentForwarding>
                                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
                            </transfers>
                            <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
                            <usePromotionTimestamp>false</usePromotionTimestamp>
                        </jenkins.plugins.publish__over__ssh.BapSshPublisher>
                    </publishers>
                    <continueOnError>false</continueOnError>
                    <failOnError>false</failOnError>
                    <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
                    <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin"
                                             reference="../.."/>
                </delegate>
            </delegate>
        </jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin>
    </postbuilders>
    <runPostStepsIfResult>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
    </runPostStepsIfResult>
</maven2-moduleset>